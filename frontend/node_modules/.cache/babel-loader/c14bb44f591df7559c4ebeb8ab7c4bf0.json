{"ast":null,"code":"var _jsxFileName = \"/Users/jerry/Documents/simple-crypto-auction/src/features/record/Record.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { getTxList, getTokenHolderList, getAddressTokenBalance } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Record = props => {\n  _s();\n\n  const [address, setAddress] = useState('');\n  const [contractAddress, setContractAddress] = useState('');\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [errMsg, setErrMsg] = useState('');\n  let columns = [];\n\n  const searchTxList = async () => {\n    try {\n      const response = await getTxList(address, 1);\n\n      if (response.status === '1') {\n        setData(response.result);\n        setPage(1);\n        setErrMsg('');\n      } else {\n        setErrMsg(response.message);\n      }\n    } catch (err) {\n      setErrMsg(err);\n    }\n  };\n\n  const searchTokenHolderList = async () => {\n    try {\n      const response = await getTokenHolderList(contractAddress, 1);\n\n      if (response.status === '1') {\n        setData(response.result);\n        setPage(1);\n        setErrMsg('');\n      } else {\n        setErrMsg(response.message);\n      }\n    } catch (err) {\n      setErrMsg(err);\n    }\n  };\n\n  const serachAddressTokenBalance = async () => {\n    try {\n      const response = await getAddressTokenBalance(address, 1);\n\n      if (response.status === '1') {\n        setData(response.result);\n        setPage(1);\n        setErrMsg('');\n      } else {\n        setErrMsg(response.message);\n      }\n    } catch (err) {\n      setErrMsg(err);\n    }\n  };\n\n  if (data != []) {\n    columns = Object.keys(data[0]).map(key => ({\n      name: key,\n      selector: row => row[key]\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"address\",\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contractAddress\",\n        children: \"Contract Address: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"contractAddress\",\n        onChange: e => setContractAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: serachAddressTokenBalance,\n      children: \"Search Address Token Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchTokenHolderList,\n      children: \"Search Token Holder List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Record, \"EeJmI5JEqLvC7X3oa65uv48UlbM=\");\n\n_c = Record;\nexport default Record;\n\nvar _c;\n\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"sources":["/Users/jerry/Documents/simple-crypto-auction/src/features/record/Record.js"],"names":["React","useState","DataTable","getTxList","getTokenHolderList","getAddressTokenBalance","Record","props","address","setAddress","contractAddress","setContractAddress","page","setPage","data","setData","errMsg","setErrMsg","columns","searchTxList","response","status","result","message","err","searchTokenHolderList","serachAddressTokenBalance","Object","keys","map","key","name","selector","row","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { getTxList, getTokenHolderList, getAddressTokenBalance } from './api';\n\nconst Record = (props) => {\n  const [address, setAddress] = useState('');\n  const [contractAddress, setContractAddress] = useState('');\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n  const [errMsg, setErrMsg] = useState('');\n  let columns = [];\n\n  const searchTxList = async () => {\n    try {\n      const response = await getTxList(address, 1);\n      if (response.status === '1') {\n        setData(response.result);\n        setPage(1);\n        setErrMsg('');\n      } else {\n        setErrMsg(response.message);\n      }\n    } catch (err) {\n      setErrMsg(err);\n    }\n  }\n\n  const searchTokenHolderList = async () => {\n    try {\n      const response = await getTokenHolderList(contractAddress, 1);\n      if (response.status === '1') {\n        setData(response.result);\n        setPage(1);\n        setErrMsg('');\n      } else {\n        setErrMsg(response.message);\n      }\n    } catch (err) {\n      setErrMsg(err);\n    }\n  }\n\n  const serachAddressTokenBalance = async () => {\n    try {\n      const response = await getAddressTokenBalance(address, 1);\n      if (response.status === '1') {\n        setData(response.result);\n        setPage(1);\n        setErrMsg('');\n      } else {\n        setErrMsg(response.message);\n      }\n    } catch (err) {\n      setErrMsg(err);\n    }\n  }\n\n  if (data != []) {\n    columns = Object.keys(data[0]).map((key) => ({ name: key, selector: (row) => row[key] }))\n  }\n\n  return (\n    <div>\n      <hr />\n      <h1>Record</h1>\n      <div>\n        <label htmlFor='address'>Address: </label>\n        <input id='address' onChange={ (e) => setAddress(e.target.value) } />\n      </div>\n      <div>\n        <label htmlFor='contractAddress'>Contract Address: </label>\n        <input id='contractAddress' onChange={ (e) => setContractAddress(e.target.value) }/>\n      </div>\n      <button onClick={serachAddressTokenBalance}>Search Address Token Balance</button>\n      <button onClick={searchTokenHolderList}>Search Token Holder List</button>\n      <div>{errMsg}</div>\n      <DataTable\n        columns={columns}\n        data={data}\n      />\n    </div>\n  );\n};\n\nexport default Record;"]},"metadata":{},"sourceType":"module"}
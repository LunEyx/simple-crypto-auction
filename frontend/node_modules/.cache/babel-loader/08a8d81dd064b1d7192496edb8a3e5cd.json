{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { connectToMetamask, connectToBinance } from './connectWallet';\nconst initialState = {\n  accounts: [],\n  connectedMetamask: false,\n  connectedBinance: false,\n  etherUnit: \"1000000000000000000\",\n  connectedAccount: 'Not Connected',\n  connectionStatus: 'Not Connected'\n};\nexport const connectMetamask = createAsyncThunk('wallet/connectMetamask', connectToMetamask);\nexport const walletSlice = createSlice({\n  name: 'wallet',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(connectMetamask.fulfilled, (state, action) => {\n      state.connectedMetamask = true;\n      state.connectionStatus = 'Connected to Metamask';\n      state.connectedAccount = action.payload;\n    }).addCase(connectMetamask.rejected, (state, action) => {\n      state.connectionStatus = 'User denied account access' + action.error;\n    });\n  }\n});\nexport const selectWallet = state => state.wallet;\nexport default walletSlice.reducer;","map":{"version":3,"sources":["/Users/jerry/Documents/simple-crypto-auction/src/features/wallet/walletSlice.js"],"names":["createAsyncThunk","createSlice","connectToMetamask","connectToBinance","initialState","accounts","connectedMetamask","connectedBinance","etherUnit","connectedAccount","connectionStatus","connectMetamask","walletSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","rejected","error","selectWallet","wallet","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,iBAApD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,iBAAiB,EAAE,KAFA;AAGnBC,EAAAA,gBAAgB,EAAE,KAHC;AAInBC,EAAAA,SAAS,EAAE,qBAJQ;AAKnBC,EAAAA,gBAAgB,EAAE,eALC;AAMnBC,EAAAA,gBAAgB,EAAE;AANC,CAArB;AASA,OAAO,MAAMC,eAAe,GAAGX,gBAAgB,CAC7C,wBAD6C,EAE7CE,iBAF6C,CAAxC;AAKP,OAAO,MAAMU,WAAW,GAAGX,WAAW,CAAC;AACrCY,EAAAA,IAAI,EAAE,QAD+B;AAErCT,EAAAA,YAFqC;AAGrCU,EAAAA,QAAQ,EAAE,EAH2B;AAKrCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CACJC,OADH,CACWN,eAAe,CAACO,SAD3B,EACsC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrDD,MAAAA,KAAK,CAACb,iBAAN,GAA0B,IAA1B;AACAa,MAAAA,KAAK,CAACT,gBAAN,GAAyB,uBAAzB;AACAS,MAAAA,KAAK,CAACV,gBAAN,GAAyBW,MAAM,CAACC,OAAhC;AACD,KALH,EAMGJ,OANH,CAMWN,eAAe,CAACW,QAN3B,EAMqC,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACpDD,MAAAA,KAAK,CAACT,gBAAN,GAAyB,+BAA+BU,MAAM,CAACG,KAA/D;AACD,KARH;AASD;AAfoC,CAAD,CAA/B;AAkBP,OAAO,MAAMC,YAAY,GAAIL,KAAD,IAAWA,KAAK,CAACM,MAAtC;AAEP,eAAeb,WAAW,CAACc,OAA3B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { connectToMetamask, connectToBinance } from './connectWallet';\n\nconst initialState = {\n  accounts: [],\n  connectedMetamask: false,\n  connectedBinance: false,\n  etherUnit: \"1000000000000000000\",\n  connectedAccount: 'Not Connected',\n  connectionStatus: 'Not Connected',\n};\n\nexport const connectMetamask = createAsyncThunk(\n  'wallet/connectMetamask',\n  connectToMetamask\n);\n\nexport const walletSlice = createSlice({\n  name: 'wallet',\n  initialState,\n  reducers: {\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(connectMetamask.fulfilled, (state, action) => {\n        state.connectedMetamask = true;\n        state.connectionStatus = 'Connected to Metamask';\n        state.connectedAccount = action.payload;\n      })\n      .addCase(connectMetamask.rejected, (state, action) => {\n        state.connectionStatus = 'User denied account access' + action.error;\n      });\n  },\n});\n\nexport const selectWallet = (state) => state.wallet;\n\nexport default walletSlice.reducer;"]},"metadata":{},"sourceType":"module"}
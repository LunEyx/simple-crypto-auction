{"ast":null,"code":"import Web3 from 'web3';\nexport async function connectToMetamask() {\n  console.log(\"Connect Metamask\");\n  window.web3 = new Web3('https://bsc-dataseed1.binance.org:443');\n  await window.ethereum.enable();\n  const accounts = await window.ethereum.request({\n    method: 'eth_requestAccounts'\n  });\n  return accounts[0];\n}\nexport async function connectToBinance() {\n  console.log(\"Connect Binance\"); //window.BinanceChain = new Web3('https://bsc-dataseed1.binance.org:443');\n\n  await window.BinanceChain.enable();\n  const accounts = await window.BinanceChain.request({\n    method: 'eth_requestAccounts'\n  });\n  return accounts[0];\n}\nexport async function joinMetamaskAuction(bidAmount) {\n  console.log(\"Join Metamask Auction\");\n  const auctionAddress = '0xCe9Eef3bF7017Eb7f70817eE8ab19572e97dCFA0';\n  const transactionParameters = {\n    value: Web3.utils.numberToHex($(\"#bidAmount\").val() * etherUnit),\n    // customizable by user during MetaMask confirmation.\n    to: auctionAddress,\n    // Required except during contract publications.\n    from: window.ethereum.selectedAddress // must match user's active address.\n\n  };\n  window.ethereum.request({\n    method: 'eth_sendTransaction',\n    params: [transactionParameters]\n  }).then(txId => {\n    $('.status').html(txId);\n  });\n}\nexport async function joinBinanceAuction(bidAmount) {\n  console.log(\"Join Binance Auction\");\n}","map":{"version":3,"sources":["/Users/jerry/Documents/simple-crypto-auction/src/features/wallet/connectWallet.js"],"names":["Web3","connectToMetamask","console","log","window","web3","ethereum","enable","accounts","request","method","connectToBinance","BinanceChain","joinMetamaskAuction","bidAmount","auctionAddress","transactionParameters","value","utils","numberToHex","$","val","etherUnit","to","from","selectedAddress","params","then","txId","html","joinBinanceAuction"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,OAAO,eAAeC,iBAAf,GAAmC;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAC,EAAAA,MAAM,CAACC,IAAP,GAAc,IAAIL,IAAJ,CAAS,uCAAT,CAAd;AACA,QAAMI,MAAM,CAACE,QAAP,CAAgBC,MAAhB,EAAN;AACA,QAAMC,QAAQ,GAAG,MAAMJ,MAAM,CAACE,QAAP,CAAgBG,OAAhB,CAAwB;AAC7CC,IAAAA,MAAM,EAAE;AADqC,GAAxB,CAAvB;AAGA,SAAOF,QAAQ,CAAC,CAAD,CAAf;AACD;AAED,OAAO,eAAeG,gBAAf,GAAkC;AACvCT,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EADuC,CAEvC;;AACA,QAAMC,MAAM,CAACQ,YAAP,CAAoBL,MAApB,EAAN;AACA,QAAMC,QAAQ,GAAG,MAAMJ,MAAM,CAACQ,YAAP,CAAoBH,OAApB,CAA4B;AACjDC,IAAAA,MAAM,EAAE;AADyC,GAA5B,CAAvB;AAGA,SAAOF,QAAQ,CAAC,CAAD,CAAf;AACD;AAED,OAAO,eAAeK,mBAAf,CAAmCC,SAAnC,EAA8C;AACnDZ,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,QAAMY,cAAc,GAAG,4CAAvB;AACA,QAAMC,qBAAqB,GAAG;AAC5BC,IAAAA,KAAK,EAAEjB,IAAI,CAACkB,KAAL,CAAWC,WAAX,CAAuBC,CAAC,CAAC,YAAD,CAAD,CAAgBC,GAAhB,KAAwBC,SAA/C,CADqB;AAE5B;AACAC,IAAAA,EAAE,EAAER,cAHwB;AAGR;AACpBS,IAAAA,IAAI,EAAEpB,MAAM,CAACE,QAAP,CAAgBmB,eAJM,CAIU;;AAJV,GAA9B;AAOArB,EAAAA,MAAM,CAACE,QAAP,CAAgBG,OAAhB,CAAwB;AACtBC,IAAAA,MAAM,EAAE,qBADc;AAEtBgB,IAAAA,MAAM,EAAE,CAACV,qBAAD;AAFc,GAAxB,EAGGW,IAHH,CAGQC,IAAI,IAAI;AAACR,IAAAA,CAAC,CAAC,SAAD,CAAD,CAAaS,IAAb,CAAkBD,IAAlB;AAAwB,GAHzC;AAID;AAED,OAAO,eAAeE,kBAAf,CAAkChB,SAAlC,EAA6C;AAClDZ,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD","sourcesContent":["import Web3 from 'web3';\n\nexport async function connectToMetamask() {\n  console.log(\"Connect Metamask\");\n  window.web3 = new Web3('https://bsc-dataseed1.binance.org:443');\n  await window.ethereum.enable();\n  const accounts = await window.ethereum.request({\n    method: 'eth_requestAccounts'\n  });\n  return accounts[0];\n}\n\nexport async function connectToBinance() {\n  console.log(\"Connect Binance\");\n  //window.BinanceChain = new Web3('https://bsc-dataseed1.binance.org:443');\n  await window.BinanceChain.enable();\n  const accounts = await window.BinanceChain.request({\n    method: 'eth_requestAccounts'\n  });\n  return accounts[0];\n}\n\nexport async function joinMetamaskAuction(bidAmount) {\n  console.log(\"Join Metamask Auction\");\n  const auctionAddress = '0xCe9Eef3bF7017Eb7f70817eE8ab19572e97dCFA0';\n  const transactionParameters = {\n    value: Web3.utils.numberToHex($(\"#bidAmount\").val() * etherUnit), \n    // customizable by user during MetaMask confirmation.\n    to: auctionAddress, // Required except during contract publications.\n    from: window.ethereum.selectedAddress // must match user's active address.\n  };\n  \n  window.ethereum.request({\n    method: 'eth_sendTransaction',\n    params: [transactionParameters],\n  }).then(txId => {$('.status').html(txId)});\n}\n\nexport async function joinBinanceAuction(bidAmount) {\n  console.log(\"Join Binance Auction\");\n}"]},"metadata":{},"sourceType":"module"}
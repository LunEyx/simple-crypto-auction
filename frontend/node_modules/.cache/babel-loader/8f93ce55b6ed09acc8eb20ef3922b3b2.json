{"ast":null,"code":"var _jsxFileName = \"/Users/jerry/Documents/simple-crypto-auction/src/features/wallet/Wallet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Slider from 'rc-slider';\nimport { selectWallet, connectMetamask, connectBinance } from './walletSlice';\nimport ConnectWalletButton from './ConnectWalletButton';\nimport 'rc-slider/assets/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Wallet = props => {\n  _s();\n\n  const wallet = useSelector(selectWallet);\n  const dispatch = useDispatch();\n  const isConnected = wallet.connectedMetamask || wallet.connectedBinance;\n  const connectedAccount = wallet.connectedAccount;\n  const connectionStatus = wallet.connectionStatus;\n  const [bidAmount, setBidAmount] = useState(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isConnected ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ConnectWalletButton, {\n        name: \"Connect Metamask\",\n        onClick: () => dispatch(connectMetamask())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ConnectWalletButton, {\n        name: \"Connect BinanceWallet\",\n        onClick: () => dispatch(connectBinance())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Slider, {\n      style: {\n        width: '50%',\n        left: '10px'\n      },\n      min: 0.1,\n      max: 300,\n      step: 0.01,\n      value: bidAmount,\n      onChange: value => setBidAmount(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bidAmount\",\n        children: \"Bid price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"bidAmount\",\n        value: bidAmount,\n        onChange: value => setBidAmount(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bidAmount\",\n        children: \"BNB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"joinAuctionButton btn\",\n      disabled: true,\n      children: \"Join Auction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Account: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"showAccount\",\n        children: connectedAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status\",\n        children: connectionStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Wallet, \"HzUNn7LDBFhHU7I8a673qB1EWUk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Wallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"sources":["/Users/jerry/Documents/simple-crypto-auction/src/features/wallet/Wallet.js"],"names":["React","useState","useSelector","useDispatch","Slider","selectWallet","connectMetamask","connectBinance","ConnectWalletButton","Wallet","props","wallet","dispatch","isConnected","connectedMetamask","connectedBinance","connectedAccount","connectionStatus","bidAmount","setBidAmount","width","left","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,cAAxC,QAA8D,eAA9D;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAO,4BAAP;;;AAEA,OAAO,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAMC,MAAM,GAAGT,WAAW,CAACG,YAAD,CAA1B;AACA,QAAMO,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,WAAW,GAAGF,MAAM,CAACG,iBAAP,IAA4BH,MAAM,CAACI,gBAAvD;AACA,QAAMC,gBAAgB,GAAGL,MAAM,CAACK,gBAAhC;AACA,QAAMC,gBAAgB,GAAGN,MAAM,CAACM,gBAAhC;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,CAAD,CAA1C;AAEA,sBACE;AAAA,eACGY,WAAW,GAAG,IAAH,gBACV;AAAA,8BACE,QAAC,mBAAD;AAAqB,QAAA,IAAI,EAAC,kBAA1B;AAA6C,QAAA,OAAO,EAAE,MAAMD,QAAQ,CAACN,eAAe,EAAhB;AAApE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,mBAAD;AAAqB,QAAA,IAAI,EAAC,uBAA1B;AAAkD,QAAA,OAAO,EAAE,MAAMM,QAAQ,CAACL,cAAc,EAAf;AAAzE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAFJ,eAQE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEa,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,IAAI,EAAE;AAAtB,OAAf;AAA+C,MAAA,GAAG,EAAE,GAApD;AAAyD,MAAA,GAAG,EAAE,GAA9D;AAAmE,MAAA,IAAI,EAAE,IAAzE;AAA+E,MAAA,KAAK,EAAEH,SAAtF;AAAiG,MAAA,QAAQ,EAAGI,KAAD,IAAWH,YAAY,CAACG,KAAD;AAAlI;AAAA;AAAA;AAAA;AAAA,YARF,eAUE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,WAAxB;AAAoC,QAAA,KAAK,EAAEJ,SAA3C;AAAsD,QAAA,QAAQ,EAAGI,KAAD,IAAWH,YAAY,CAACG,KAAD;AAAvF;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAgBE;AAAQ,MAAA,SAAS,EAAC,uBAAlB;AAA0C,MAAA,QAAQ,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,eAkBE;AAAA,2CAAa;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBAA+BN;AAA/B;AAAA;AAAA;AAAA;AAAA,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,eAmBE;AAAA,0CAAY;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA,kBAA0BC;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAhCM;;GAAMR,M;UACIP,W,EACEC,W;;;KAFNM,M","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Slider from 'rc-slider';\nimport { selectWallet, connectMetamask, connectBinance } from './walletSlice';\nimport ConnectWalletButton from './ConnectWalletButton';\nimport 'rc-slider/assets/index.css';\n\nexport const Wallet = (props) => {\n  const wallet = useSelector(selectWallet);\n  const dispatch = useDispatch();\n  const isConnected = wallet.connectedMetamask || wallet.connectedBinance;\n  const connectedAccount = wallet.connectedAccount;\n  const connectionStatus = wallet.connectionStatus;\n\n  const [bidAmount, setBidAmount] = useState(1);\n\n  return (\n    <div>\n      {isConnected ? null : (\n        <>\n          <ConnectWalletButton name='Connect Metamask' onClick={() => dispatch(connectMetamask())} />\n          <ConnectWalletButton name='Connect BinanceWallet' onClick={() => dispatch(connectBinance())} />  \n        </>\n      )}\n\n      <Slider style={{ width: '50%', left: '10px' }} min={0.1} max={300} step={0.01} value={bidAmount} onChange={(value) => setBidAmount(value)} />\n\n      <p>\n        <label htmlFor=\"bidAmount\">Bid price:</label>\n        <input type=\"number\" id=\"bidAmount\" value={bidAmount} onChange={(value) => setBidAmount(value)} />\n        <label htmlFor=\"bidAmount\">BNB</label>\n      </p>\n\n      <button className=\"joinAuctionButton btn\" disabled>Join Auction</button>\n\n      <h2>Account: <span className=\"showAccount\">{connectedAccount}</span></h2>\n      <h2>Status: <span className=\"status\">{connectionStatus}</span></h2>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}
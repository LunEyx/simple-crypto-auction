{"ast":null,"code":"import axios from 'axios';\nimport { OFFSET } from './constants';\naxios.defaults.baseURL = 'http://localhost:3001';\nexport const getTxList = async function (address) {\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  const params = {\n    address,\n    page,\n    offset: OFFSET\n  };\n  const response = await axios.get('/account/txList', {\n    params\n  });\n\n  if (response.status === 200) {\n    return response.data;\n  } else {\n    return response.message;\n  }\n};\nexport const getAddressTokenBalance = async function (address) {\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  const params = {\n    address,\n    page,\n    offset: OFFSET\n  };\n  const response = await axios.get('/account/addressTokenBalance', {\n    params\n  });\n\n  if (response.status === 200) {\n    return response.data;\n  } else {\n    return response.message;\n  }\n};\nexport const getTokenHolderList = async function (contractAddress) {\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  const params = {\n    contractaddress: contractAddress,\n    page,\n    offset: OFFSET\n  };\n  const response = await axios.get('/token/tokenholderlist', {\n    params\n  });\n\n  if (response.status === 200) {\n    return response.data;\n  } else {\n    return response.message;\n  }\n};","map":{"version":3,"sources":["/Users/jerry/Documents/simple-crypto-auction/src/features/record/api.js"],"names":["axios","OFFSET","defaults","baseURL","getTxList","address","page","params","offset","response","get","status","data","message","getAddressTokenBalance","getTokenHolderList","contractAddress","contractaddress"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,uBAAzB;AAEA,OAAO,MAAMC,SAAS,GAAG,gBAAOC,OAAP,EAA6B;AAAA,MAAbC,IAAa,uEAAN,CAAM;AACpD,QAAMC,MAAM,GAAG;AAAEF,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBE,IAAAA,MAAM,EAAEP;AAAzB,GAAf;AACA,QAAMQ,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,iBAAV,EAA6B;AAAEH,IAAAA;AAAF,GAA7B,CAAvB;;AACA,MAAIE,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,WAAOF,QAAQ,CAACG,IAAhB;AACD,GAFD,MAEO;AACL,WAAOH,QAAQ,CAACI,OAAhB;AACD;AACF,CARM;AAUP,OAAO,MAAMC,sBAAsB,GAAG,gBAAOT,OAAP,EAA6B;AAAA,MAAbC,IAAa,uEAAN,CAAM;AACjE,QAAMC,MAAM,GAAG;AAAEF,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBE,IAAAA,MAAM,EAAEP;AAAzB,GAAf;AACA,QAAMQ,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,8BAAV,EAA0C;AAAEH,IAAAA;AAAF,GAA1C,CAAvB;;AACA,MAAIE,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,WAAOF,QAAQ,CAACG,IAAhB;AACD,GAFD,MAEO;AACL,WAAOH,QAAQ,CAACI,OAAhB;AACD;AACF,CARM;AAUP,OAAO,MAAME,kBAAkB,GAAG,gBAAOC,eAAP,EAAqC;AAAA,MAAbV,IAAa,uEAAN,CAAM;AACrE,QAAMC,MAAM,GAAG;AAAEU,IAAAA,eAAe,EAAED,eAAnB;AAAoCV,IAAAA,IAApC;AAA0CE,IAAAA,MAAM,EAAEP;AAAlD,GAAf;AACA,QAAMQ,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,wBAAV,EAAoC;AAAEH,IAAAA;AAAF,GAApC,CAAvB;;AACA,MAAIE,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,WAAOF,QAAQ,CAACG,IAAhB;AACD,GAFD,MAEO;AACL,WAAOH,QAAQ,CAACI,OAAhB;AACD;AACF,CARM","sourcesContent":["import axios from 'axios';\nimport { OFFSET } from './constants';\n\naxios.defaults.baseURL = 'http://localhost:3001'\n\nexport const getTxList = async (address, page = 1) => {\n  const params = { address, page, offset: OFFSET };\n  const response = await axios.get('/account/txList', { params })\n  if (response.status === 200) {\n    return response.data;\n  } else {\n    return response.message;\n  }\n};\n\nexport const getAddressTokenBalance = async (address, page = 1) => {\n  const params = { address, page, offset: OFFSET };\n  const response = await axios.get('/account/addressTokenBalance', { params })\n  if (response.status === 200) {\n    return response.data;\n  } else {\n    return response.message;\n  }\n};\n\nexport const getTokenHolderList = async (contractAddress, page = 1) => {\n  const params = { contractaddress: contractAddress, page, offset: OFFSET };\n  const response = await axios.get('/token/tokenholderlist', { params })\n  if (response.status === 200) {\n    return response.data;\n  } else {\n    return response.message;\n  }\n};"]},"metadata":{},"sourceType":"module"}